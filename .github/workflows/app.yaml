name: "DevOps-1_App"
# when should this workflow start?
on: workflow_dispatch
  # on push event
  # push:
    # branches:
      # - main
      # - stage
    # only this path of the folder
    # paths:
      # - terraform/**
  # on pull request event
  # pull_request:
    # branches:
      # - main
    # paths:
      # - terraform/**
env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: devops-1-eks
  ECR_REPOSITORY: ${{ secrets.REGISTRY }}

jobs:
  testing_app:
    name: "Testing Application"
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Maven test
        run: mvn test

      - name: Maven Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
     
      # - name: Setup SonarQube
        # uses: warchant/setup-sonar-scanner@v7 
      
      # in SONAR_ORG is a ORG key not name
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=src/
            -Dsonar.junit.reportsPath=target/surefire-reports/
            -Dsonar.jacoco.reportsPath=target/jacoco.exec
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
            -X
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
      
        # in SonarCloud, Create QG is not free now so we gonna skip this
        # - name: SonarQube Quality Gate
        #   id: sonar-qg-check
        #   uses: sonarsource/sonarqube-quality-gate-action@master
        #   # Force to fail step after specific time
        #   timeout-minutes: 5
        #   env:
        #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #     SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  Buid_And_Publish:   
    needs: testing_app
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: ${{ secrets.REGISTRY }}
         repo: ${{ env.ECR_REPOSITORY }}
         region: ${{ env.AWS_REGION }}
          # build id from Github Action
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./